<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">5</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/-12" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Viewstate Extractor" enabled="true">
              <stringProp name="HtmlExtractor.refname">viewstate</stringProp>
              <stringProp name="HtmlExtractor.expr">input[id=__VIEWSTATE]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.default"></stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.match_number">0</stringProp>
              <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            </HtmlExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="TestPlan.comments">Set-Cookie: ASP.NET_SessionId=zfzb2bwta4jgb3u2njtppnit; path=/; Htt</stringProp>
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">SessionId</stringProp>
              <stringProp name="RegexExtractor.regex">Set-Cookie: (.*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/Inspection.aspx-13" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Inspection.aspx</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://39.98.109.243/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/-14 " enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="__VIEWSTATE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__VIEWSTATE</stringProp>
                  <stringProp name="Argument.value">${viewstate}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__VIEWSTATEGENERATOR" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">__VIEWSTATEGENERATOR</stringProp>
                  <stringProp name="Argument.value">C2EE9ABB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__EVENTVALIDATION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__EVENTVALIDATION</stringProp>
                  <stringProp name="Argument.value">/wEdAAYIXpSjaTraOmXXOoXDrXIpR1LBKX1P1xh290RQyTesRQa+ROBMEf7egV772v+RsRKFa3z02QmQnYFjj3wKxfjrop4oRunf14dz2Zt2+QKDEAL+NAxxXEPzRO7SVJwAXskYt2f0r49eO0Dg5MdvykqvL4lg+Dc5V8d0EF9pRWyUjA==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="UserName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">UserName</stringProp>
                  <stringProp name="Argument.value">${shr}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="PassWord" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">PassWord</stringProp>
                  <stringProp name="Argument.value">${pwd}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="txtCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">txtCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="btnLogin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">btnLogin</stringProp>
                  <stringProp name="Argument.value">登  录</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain ${sby} -- ${shr}</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://39.98.109.243/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://39.98.109.243</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="951931466">税务审核</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">${__setProperty(g_session_id_${__threadNum},${SessionId},)};
${__setProperty(g_shrid_id_${__threadNum},${shrid},)};
${__setProperty(g_sby_id_${__threadNum},${shr},)};</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/Login.aspx-45" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/Login.aspx</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://39.98.109.243/MetaDataRegisterRecord.aspx?categoryId=11</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/Inspection.aspx-46" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/Inspection.aspx</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://39.98.109.243/Login.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/Login.aspx-49" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="__VIEWSTATE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__VIEWSTATE</stringProp>
                <stringProp name="Argument.value">/wEPDwUKLTU2NjI2MTI2Mw9kFgICAw9kFgYCAw8PFgIeBFRleHRlZGQCBw8PFgIfAAUS5a+G56CB5LiN5q2j56Gu77yBZGQCCw8PFgIfAGVkZGTaPCnjAK5LxWnUfM0XYrH1otcQfUKdwKrBqxh7+NmnNw==</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__VIEWSTATEGENERATOR" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__VIEWSTATEGENERATOR</stringProp>
                <stringProp name="Argument.value">C2EE9ABB</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__EVENTVALIDATION" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__EVENTVALIDATION</stringProp>
                <stringProp name="Argument.value">/wEdAAY7Ht08wFnJcxFuNx5+PhEdR1LBKX1P1xh290RQyTesRQa+ROBMEf7egV772v+RsRKFa3z02QmQnYFjj3wKxfjrop4oRunf14dz2Zt2+QKDEAL+NAxxXEPzRO7SVJwAXskJXAdrTiDpBR1UPcYg4ZZEXoSPgv5Cl/j9CHeJfvhp+Q==</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="UserName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">UserName</stringProp>
                <stringProp name="Argument.value">reviewuser1@163.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="PassWord" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">PassWord</stringProp>
                <stringProp name="Argument.value">test1234</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="txtCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">txtCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="btnLogin" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">btnLogin</stringProp>
                <stringProp name="Argument.value">登  录</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/Login.aspx</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://39.98.109.243/Login.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://39.98.109.243</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/index.aspx-50" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/index.aspx</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://39.98.109.243/Login.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/MetaDataAudit.aspx-51" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="categoryId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">categoryId</stringProp>
                <stringProp name="Argument.value">14</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/MetaDataAudit.aspx</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://39.98.109.243/MetaDataAudit.aspx?categoryId=14</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Viewstate Extractor" enabled="true">
            <stringProp name="HtmlExtractor.refname">viewstate2</stringProp>
            <stringProp name="HtmlExtractor.expr">input[id=__VIEWSTATE]</stringProp>
            <stringProp name="HtmlExtractor.attribute">value</stringProp>
            <stringProp name="HtmlExtractor.default"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.match_number">0</stringProp>
            <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            <stringProp name="TestPlan.comments">__EVENTVALIDATION</stringProp>
          </HtmlExtractor>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="EVENTVALIDATION Extractor" enabled="true">
            <stringProp name="HtmlExtractor.refname">EVENTVALIDATION</stringProp>
            <stringProp name="HtmlExtractor.expr">input[id=__EVENTVALIDATION]</stringProp>
            <stringProp name="HtmlExtractor.attribute">value</stringProp>
            <stringProp name="HtmlExtractor.default"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.match_number">0</stringProp>
            <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            <stringProp name="TestPlan.comments">__EVENTVALIDATION</stringProp>
          </HtmlExtractor>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="VIEWSTATEGENERATOR Extractor" enabled="true">
            <stringProp name="HtmlExtractor.refname">VIEWSTATEGENERATOR</stringProp>
            <stringProp name="HtmlExtractor.expr">input[id=__VIEWSTATEGENERATOR]</stringProp>
            <stringProp name="HtmlExtractor.attribute">value</stringProp>
            <stringProp name="HtmlExtractor.default"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.match_number">0</stringProp>
            <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            <stringProp name="TestPlan.comments">__EVENTVALIDATION</stringProp>
          </HtmlExtractor>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="PREVIOUSPAGE Extractor" enabled="true">
            <stringProp name="HtmlExtractor.refname">PREVIOUSPAGE</stringProp>
            <stringProp name="HtmlExtractor.expr">input[id=__PREVIOUSPAGE]</stringProp>
            <stringProp name="HtmlExtractor.attribute">value</stringProp>
            <stringProp name="HtmlExtractor.default"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.match_number">0</stringProp>
            <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            <stringProp name="TestPlan.comments">__EVENTVALIDATION</stringProp>
          </HtmlExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/MetaDataAudit.aspx?categoryId=14-52" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="__EVENTTARGET" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__EVENTTARGET</stringProp>
                <stringProp name="Argument.value">ctl00$MainContent$gdvAudit$ctl02$LinkButton2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__EVENTARGUMENT" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__EVENTARGUMENT</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__VIEWSTATE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__VIEWSTATE</stringProp>
                <stringProp name="Argument.value">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</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__VIEWSTATEGENERATOR" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__VIEWSTATEGENERATOR</stringProp>
                <stringProp name="Argument.value">CFED7D04</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__PREVIOUSPAGE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__PREVIOUSPAGE</stringProp>
                <stringProp name="Argument.value">6fnF0dl6c3iCkYqY4d_O8ZjFiEvNhIgE90vvwTGnk_R0nYoCaWGwvJsoVT_dCR7n9l6EpRj7WvORAKfCvRPX1Gq2JUo8yaNTQzmf-F_lNA81</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__EVENTVALIDATION" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__EVENTVALIDATION</stringProp>
                <stringProp name="Argument.value">/wEdABen4YJUgjZoWQsCl7j4EgrGyMsrpp3dZQJL06FzQr49yYHSPEmdPIeszf9wfnNDPRJDfJJcRVS5W3nUn++pJfQkwQOoOHrg2meMMeTmQB3qI92+pmYYodYPee6CAOxqUoEdMy/aw2wqJbRIQdbsEz84QB8ZQFk//VaOH5ftpQ9zazW/Mifk8kwDUDI2qtHC756szZ5KTARm8pI8gfwizarEX+BLCRUzCA+MY9Ro/Z5S87oyU7A5ZXSSp31AtGt9+5hqIVWtgO4uI9kT0QLvuuWmMgxqaA6G7Qn4nrr4VHpZ+junET7svJhGvO/d7ZASKQrde7EEM9ncxErAhMWWUEqhsczEhEdNTthgn6eQZ2jLVW+OH+2CcTYcJ5cu2ff7jN3MiTvP44yaOsdZVH+SFWIszH4SRadoai8djvOdqsJHzO6C6+uCX19P1I+f3GJ9KkeJexE+Aa3GOwnWqI70zgKPkg6mMOt1Eknc+kumIeHP1kGUG23cxLrbDypK3LesdnjcAh8WCBlYSeIPMyH0xUYZ</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$repCategories$ctl01$hidCategoryId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$repCategories$ctl01$hidCategoryId</stringProp>
                <stringProp name="Argument.value">14</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$txtZhongWenName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$txtZhongWenName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$txtYingWenName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$txtYingWenName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$ddlType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$ddlType</stringProp>
                <stringProp name="Argument.value">001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$DtTimeStart1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$DtTimeStart1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$DtTimeEnd1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$DtTimeEnd1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$AspNetPager1_input" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$AspNetPager1_input</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/MetaDataAudit.aspx?categoryId=14</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://39.98.109.243/MetaDataAudit.aspx?categoryId=14</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://39.98.109.243</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/MetaDataAudit.aspx?categoryId=14-53" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="__EVENTTARGET" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__EVENTTARGET</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__EVENTARGUMENT" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__EVENTARGUMENT</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__VIEWSTATE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__VIEWSTATE</stringProp>
                <stringProp name="Argument.value">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</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__VIEWSTATEGENERATOR" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__VIEWSTATEGENERATOR</stringProp>
                <stringProp name="Argument.value">CFED7D04</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__PREVIOUSPAGE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__PREVIOUSPAGE</stringProp>
                <stringProp name="Argument.value">6fnF0dl6c3iCkYqY4d_O8ZjFiEvNhIgE90vvwTGnk_R0nYoCaWGwvJsoVT_dCR7n9l6EpRj7WvORAKfCvRPX1Gq2JUo8yaNTQzmf-F_lNA81</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__EVENTVALIDATION" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__EVENTVALIDATION</stringProp>
                <stringProp name="Argument.value">/wEdAB8QT32HEn5Z2UpFcA3VdihsyMsrpp3dZQJL06FzQr49yYHSPEmdPIeszf9wfnNDPRJDfJJcRVS5W3nUn++pJfQkwQOoOHrg2meMMeTmQB3qI92+pmYYodYPee6CAOxqUoEdMy/aw2wqJbRIQdbsEz84QB8ZQFk//VaOH5ftpQ9zazW/Mifk8kwDUDI2qtHC756szZ5KTARm8pI8gfwizarEX+BLCRUzCA+MY9Ro/Z5S87oyU7A5ZXSSp31AtGt9+5hqIVWtgO4uI9kT0QLvuuWmMgxqaA6G7Qn4nrr4VHpZ+junET7svJhGvO/d7ZASKQrde7EEM9ncxErAhMWWUEqhsczEhEdNTthgn6eQZ2jLVW+OH+2CcTYcJ5cu2ff7jN3MiTvP44yaOsdZVH+SFWIszH4SRadoai8djvOdqsJHzO6C6+uCX19P1I+f3GJ9KkeJexE+Aa3GOwnWqI70zgKPkg6mMOt1Eknc+kumIeHP1mWiXwYDIgh24PHX8FiHOHtfpRgIeGzMkFJrdXNMZJrjZdxdQJuFL/1G8AOgQNRk5eMVleNGWQsqSNDKkuzspnTuoaQ8NxQ2u00z3dCt0O0fFXzQCZmDGTsQZljlBKpEYvheibxlKokLPsD0o9Ajy65arJucTKfx0SFFsMGgjtg15zvOAS8R1UDofL8G4ODVnZqDVK1FBLSz7giu117c+xc=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$repCategories$ctl01$hidCategoryId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$repCategories$ctl01$hidCategoryId</stringProp>
                <stringProp name="Argument.value">14</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$txtZhongWenName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$txtZhongWenName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$txtYingWenName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$txtYingWenName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$ddlType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$ddlType</stringProp>
                <stringProp name="Argument.value">001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$DtTimeStart1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$DtTimeStart1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$DtTimeEnd1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$DtTimeEnd1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$AspNetPager1_input" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$AspNetPager1_input</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$btnPass" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$btnPass</stringProp>
                <stringProp name="Argument.value">通  过</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/MetaDataAudit.aspx?categoryId=14</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://39.98.109.243/MetaDataAudit.aspx?categoryId=14</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://39.98.109.243</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/MetaDataAudit.aspx?categoryId=14-54" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="__EVENTTARGET" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__EVENTTARGET</stringProp>
                <stringProp name="Argument.value">ctl00$MainContent$gdvAudit$ctl02$LinkButton2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__EVENTARGUMENT" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__EVENTARGUMENT</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__VIEWSTATE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__VIEWSTATE</stringProp>
                <stringProp name="Argument.value">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</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__VIEWSTATEGENERATOR" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__VIEWSTATEGENERATOR</stringProp>
                <stringProp name="Argument.value">CFED7D04</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__PREVIOUSPAGE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__PREVIOUSPAGE</stringProp>
                <stringProp name="Argument.value">6fnF0dl6c3iCkYqY4d_O8ZjFiEvNhIgE90vvwTGnk_R0nYoCaWGwvJsoVT_dCR7n9l6EpRj7WvORAKfCvRPX1Gq2JUo8yaNTQzmf-F_lNA81</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__EVENTVALIDATION" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__EVENTVALIDATION</stringProp>
                <stringProp name="Argument.value">/wEdABfr0VbHIPZvahnyq/kzIW1qyMsrpp3dZQJL06FzQr49yYHSPEmdPIeszf9wfnNDPRJDfJJcRVS5W3nUn++pJfQkwQOoOHrg2meMMeTmQB3qI92+pmYYodYPee6CAOxqUoEdMy/aw2wqJbRIQdbsEz84QB8ZQFk//VaOH5ftpQ9zazW/Mifk8kwDUDI2qtHC756szZ5KTARm8pI8gfwizarEX+BLCRUzCA+MY9Ro/Z5S87oyU7A5ZXSSp31AtGt9+5hqIVWtgO4uI9kT0QLvuuWmMgxqaA6G7Qn4nrr4VHpZ+junET7svJhGvO/d7ZASKQrde7EEM9ncxErAhMWWUEqhsczEhEdNTthgn6eQZ2jLVW+OH+2CcTYcJ5cu2ff7jN3MiTvP44yaOsdZVH+SFWIszH4SRadoai8djvOdqsJHzO6C6+uCX19P1I+f3GJ9KkeJexE+Aa3GOwnWqI70zgKPkg6mMOt1Eknc+kumIeHP1mEgNxUsuiJmomqyzRIOgiUh9o2WcEj/1AsKPQMY3frJ</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$repCategories$ctl01$hidCategoryId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$repCategories$ctl01$hidCategoryId</stringProp>
                <stringProp name="Argument.value">14</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$txtZhongWenName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$txtZhongWenName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$txtYingWenName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$txtYingWenName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$ddlType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$ddlType</stringProp>
                <stringProp name="Argument.value">001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$DtTimeStart1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$DtTimeStart1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$DtTimeEnd1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$DtTimeEnd1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$AspNetPager1_input" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$AspNetPager1_input</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/MetaDataAudit.aspx?categoryId=14</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://39.98.109.243/MetaDataAudit.aspx?categoryId=14</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://39.98.109.243</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/MetaDataAudit.aspx?categoryId=log" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="__EVENTTARGET" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__EVENTTARGET</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__EVENTARGUMENT" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__EVENTARGUMENT</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__VIEWSTATE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__VIEWSTATE</stringProp>
                <stringProp name="Argument.value">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AAUGODg3NjA0ZGQCAQ9kFgICAQ8PFgIfAAUM55Sz5oql5Y2V5L2NZGQCAg9kFgICAQ8PFgIfAAUMWVNCRzAwMDAzOTg1ZGQCAw9kFgICAQ8PFgIfAAUH5YiG5bGAQWRkAgQPZBYCAgEPDxYCHwAFBuaPkOS6pGRkAgUPZBYCAgEPDxYCHwAFC+eUs+aKpeWRmDEwZGQCBg9kFgICAQ8PFgIfAAUKMjAxOS0xMC0xOGRkAgkPZBYOZg9kFgICAQ8PFgIfAAUGODg3NjAxZGQCAQ9kFgICAQ8PFgIfAAUM55Sz5oql5Y2V5L2NZGQCAg9kFgICAQ8PFgIfAAUMWVNCRzIwMDAzODkwZGQCAw9kFgICAQ8PFgIfAAUH5YiG5bGAQWRkAgQPZBYCAgEPDxYCHwAFBuaPkOS6pGRkAgUPZBYCAgEPDxYCHwAFCueUs+aKpeWRmDlkZAIGD2QWAgIBDw8WAh8ABQoyMDE5LTEwLTE4ZGQCCg9kFg5mD2QWAgIBDw8WAh8ABQY4ODc1NzhkZAIBD2QWAgIBDw8WAh8ABQznlLPmiqXljZXkvY1kZAICD2QWAgIBDw8WAh8ABQxZU0JHMDAwMDM5NzhkZAIDD2QWAgIBDw8WAh8ABQfliIblsYBBZGQCBA9kFgICAQ8PFgIfAAUG5o+Q5LqkZGQCBQ9kFgICAQ8PFgIfAAUK55Sz5oql5ZGYN2RkAgYPZBYCAgEPDxYCHwAFCjIwMTktMTAtMThkZAILDw8WAh8BaGRkAhEPDxYEHgtSZWNvcmRjb3VudALxLh4OQ3VzdG9tSW5mb1RleHQFLuW9k+WJjeesrDEvNjAx6aG1IOWFsTYwMDHmnaHorrDlvZUg5q+P6aG1MTDmnaFkZAITDw8WAh8BZ2QWAgIFDw8WAh8ABQY5Mzg5NjhkZAIVDw8WAh8BZ2QWDAIBDw8WAh8ABQbkupHkvqdkZAIDDw8WAh8ABQYxMTExMTFkZAIFDw8WAh8ABQfliIblsYBBZGQCBw8PFgIfAAUG5o+Q5LqkZGQCCQ8PFgIfAAUK55Sz5oql5ZGYMWRkAgsPDxYCHwAFCjIwMjItMDEtMTlkZAIZDw8WBB4WVHJlZURpYWxvZ0JveF9TaG93VHlwZQspgwFDb20uRUVTaG91Lld3dy5UcmVlQ29udHJvbC5FRGlhbG9nQm94VHlwZSwgQ29tLkVFU2hvdS5Xd3cuVHJlZUNvbnRyb2wsIFZlcnNpb249MS4wLjQ5ODAuMzAyNjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbAAeEVRyZWVEaWFsb2dCb3hfTXNnBQ/lrqHmoLjmiJDlip/vvIFkZBgBBRpjdGwwMCRNYWluQ29udGVudCRnZHZBdWRpdA88KwAMAQgCAWTWGfPFBhlPeWGKpqumUzfKNqSiKetj+h8lWWn9/cX0qw==</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__VIEWSTATEGENERATOR" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__VIEWSTATEGENERATOR</stringProp>
                <stringProp name="Argument.value">CFED7D04</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__PREVIOUSPAGE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__PREVIOUSPAGE</stringProp>
                <stringProp name="Argument.value">6fnF0dl6c3iCkYqY4d_O8ZjFiEvNhIgE90vvwTGnk_R0nYoCaWGwvJsoVT_dCR7n9l6EpRj7WvORAKfCvRPX1Gq2JUo8yaNTQzmf-F_lNA81</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__EVENTVALIDATION" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__EVENTVALIDATION</stringProp>
                <stringProp name="Argument.value">/wEdAB9yEUMLCnyF6a+ul30+RpdoyMsrpp3dZQJL06FzQr49yYHSPEmdPIeszf9wfnNDPRJDfJJcRVS5W3nUn++pJfQkwQOoOHrg2meMMeTmQB3qI92+pmYYodYPee6CAOxqUoEdMy/aw2wqJbRIQdbsEz84QB8ZQFk//VaOH5ftpQ9zazW/Mifk8kwDUDI2qtHC756szZ5KTARm8pI8gfwizarEX+BLCRUzCA+MY9Ro/Z5S87oyU7A5ZXSSp31AtGt9+5hqIVWtgO4uI9kT0QLvuuWmMgxqaA6G7Qn4nrr4VHpZ+junET7svJhGvO/d7ZASKQrde7EEM9ncxErAhMWWUEqhsczEhEdNTthgn6eQZ2jLVW+OH+2CcTYcJ5cu2ff7jN3MiTvP44yaOsdZVH+SFWIszH4SRadoai8djvOdqsJHzO6C6+uCX19P1I+f3GJ9KkeJexE+Aa3GOwnWqI70zgKPkg6mMOt1Eknc+kumIeHP1mWiXwYDIgh24PHX8FiHOHtfpRgIeGzMkFJrdXNMZJrjZdxdQJuFL/1G8AOgQNRk5eMVleNGWQsqSNDKkuzspnTuoaQ8NxQ2u00z3dCt0O0fFXzQCZmDGTsQZljlBKpEYvheibxlKokLPsD0o9Ajy65arJucTKfx0SFFsMGgjtg1PtdiCbmt4dXflteUa+fSCG/qjd6WXlwQw0dGR/tnTnA=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$repCategories$ctl01$hidCategoryId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$repCategories$ctl01$hidCategoryId</stringProp>
                <stringProp name="Argument.value">14</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$txtZhongWenName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$txtZhongWenName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$txtYingWenName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$txtYingWenName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$ddlType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$ddlType</stringProp>
                <stringProp name="Argument.value">001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$DtTimeStart1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$DtTimeStart1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$DtTimeEnd1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$DtTimeEnd1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$AspNetPager1_input" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$AspNetPager1_input</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$btnPass" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$btnPass</stringProp>
                <stringProp name="Argument.value">通  过</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/MetaDataAudit.aspx?categoryId=14</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://39.98.109.243/MetaDataAudit.aspx?categoryId=14</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://39.98.109.243</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Viewstate Extractor" enabled="true">
            <stringProp name="HtmlExtractor.refname">viewstate2</stringProp>
            <stringProp name="HtmlExtractor.expr">input[id=__VIEWSTATE]</stringProp>
            <stringProp name="HtmlExtractor.attribute">value</stringProp>
            <stringProp name="HtmlExtractor.default"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.match_number">0</stringProp>
            <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            <stringProp name="TestPlan.comments">__EVENTVALIDATION</stringProp>
          </HtmlExtractor>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="EVENTVALIDATION Extractor" enabled="true">
            <stringProp name="HtmlExtractor.refname">EVENTVALIDATION</stringProp>
            <stringProp name="HtmlExtractor.expr">input[id=__EVENTVALIDATION]</stringProp>
            <stringProp name="HtmlExtractor.attribute">value</stringProp>
            <stringProp name="HtmlExtractor.default"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.match_number">0</stringProp>
            <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            <stringProp name="TestPlan.comments">__EVENTVALIDATION</stringProp>
          </HtmlExtractor>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="VIEWSTATEGENERATOR Extractor" enabled="true">
            <stringProp name="HtmlExtractor.refname">VIEWSTATEGENERATOR</stringProp>
            <stringProp name="HtmlExtractor.expr">input[id=__VIEWSTATEGENERATOR]</stringProp>
            <stringProp name="HtmlExtractor.attribute">value</stringProp>
            <stringProp name="HtmlExtractor.default"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.match_number">0</stringProp>
            <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            <stringProp name="TestPlan.comments">__EVENTVALIDATION</stringProp>
          </HtmlExtractor>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="PREVIOUSPAGE Extractor" enabled="true">
            <stringProp name="HtmlExtractor.refname">PREVIOUSPAGE</stringProp>
            <stringProp name="HtmlExtractor.expr">input[id=__PREVIOUSPAGE]</stringProp>
            <stringProp name="HtmlExtractor.attribute">value</stringProp>
            <stringProp name="HtmlExtractor.default"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.match_number">0</stringProp>
            <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            <stringProp name="TestPlan.comments">__EVENTVALIDATION</stringProp>
          </HtmlExtractor>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="04_SWSH_TC" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login/MetaDataAudit.aspx?categoryId=14-55" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="__EVENTTARGET" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">__EVENTTARGET</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__EVENTARGUMENT" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">__EVENTARGUMENT</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__VIEWSTATE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__VIEWSTATE</stringProp>
                  <stringProp name="Argument.value">${viewstate2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__VIEWSTATEGENERATOR" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">__VIEWSTATEGENERATOR</stringProp>
                  <stringProp name="Argument.value">${VIEWSTATEGENERATOR}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__PREVIOUSPAGE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">__PREVIOUSPAGE</stringProp>
                  <stringProp name="Argument.value">${PREVIOUSPAGE}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__EVENTVALIDATION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__EVENTVALIDATION</stringProp>
                  <stringProp name="Argument.value">${EVENTVALIDATION}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$repCategories$ctl01$hidCategoryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$repCategories$ctl01$hidCategoryId</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$MainContent$txtZhongWenName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$MainContent$txtZhongWenName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$MainContent$txtYingWenName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$MainContent$txtYingWenName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$MainContent$ddlType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$MainContent$ddlType</stringProp>
                  <stringProp name="Argument.value">001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$MainContent$DtTimeStart1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$MainContent$DtTimeStart1</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$MainContent$DtTimeEnd1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$MainContent$DtTimeEnd1</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$MainContent$AspNetPager1_input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$MainContent$AspNetPager1_input</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$MainContent$btnPass" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$MainContent$btnPass</stringProp>
                  <stringProp name="Argument.value">通  过</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">39.98.109.243</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MetaDataAudit.aspx?categoryId=14</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://39.98.109.243/MetaDataAudit.aspx?categoryId=14</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://39.98.109.243</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="739908088">已审核！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cookie</stringProp>
              <stringProp name="Header.value">${__property(${__V(g_session_id_${__threadNum})})}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
          <boolProp name="CacheManager.controlledByThread">false</boolProp>
        </CacheManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="SHR Data Set Config" enabled="true">
          <stringProp name="filename">04_shr.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">shr,pwd</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
